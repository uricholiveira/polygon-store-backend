// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int               @id @default(autoincrement())
  referenceId String?           @default(uuid())
  description String
  imageUrl    String
  categories  ProductCategory[]
  variants    Variant[]
  OrderItems  OrderItems[]
}

model ProductCategory {
  id         Int       @id @default(autoincrement())
  product    Product?  @relation(fields: [productId], references: [id])
  productId  Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model Category {
  id              Int               @id @default(autoincrement())
  description     String
  productCategory ProductCategory[]
}

model Variant {
  id          Int          @id @default(autoincrement())
  referenceId String?      @default(uuid())
  description String
  value       Float
  product     Product?     @relation(fields: [productId], references: [id])
  productId   Int?
  OrderItems  OrderItems[]
}

model Order {
  id            Int          @id @default(autoincrement())
  referenceId   String       @default(uuid())
  status        OrderStatus  @relation(fields: [orderStatusId], references: [id])
  orderStatusId Int
  totalAmount   Float
  items         OrderItems[]
}

model OrderStatus {
  id          Int     @id @default(autoincrement())
  description String
  Order       Order[]
}

model OrderItems {
  id          Int     @id @default(autoincrement())
  referenceId String  @default(uuid())
  amount      Float
  product     Product @relation(fields: [productId], references: [id])
  variant     Variant @relation(fields: [variantId], references: [id])
  productId   Int
  variantId   Int
  Order       Order?  @relation(fields: [orderId], references: [id])
  orderId     Int?
}
